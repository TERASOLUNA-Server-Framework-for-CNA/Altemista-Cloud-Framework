<?xml version="1.0" encoding="UTF-8"?>
<web-fragment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd"
	version="3.0">
	
	<!--tag::name[]-->
	<name>altemistaCloudfwkWebapp</name>
	<!--end::name[]-->


	<!--tag::internals1[]-->
	<!-- == Bootstrap a single root context in Spring Web MVC == -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:org/altemista/cloudfwk/config/webapp/altemista-cloudfwk-webapp.xml</param-value>
	</context-param>
	<context-param>
		<param-name>contextInitializerClasses</param-name>
		<param-value>org.altemista.cloudfwk.core.AltemistaCloudfwkApplicationContextInitializer</param-value>
	</context-param>
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value></param-value>
		</init-param>
		<load-on-startup>10</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!--end::internals1[]-->
	
	
	<!--tag::internals2[]-->
	<!-- == Outputs debug log at the time of generating, discarding, activating or deactivating session,
			and adding or deleting session attributes == -->
	<listener>
		<listener-class>org.terasoluna.gfw.web.logging.HttpSessionEventLoggingListener</listener-class>
	</listener>
	
	
	<!-- == This class outputs the log of exceptions
			which do not get handled by HandlerExceptionResolver of SpringMVC == -->
	<filter>
		<filter-name>exceptionLoggingFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>exceptionLoggingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!-- == Logging MDC Filter == -->
	<filter>
	    <filter-name>MDCClearFilter</filter-name>
	    <filter-class>org.terasoluna.gfw.web.logging.mdc.MDCClearFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>MDCClearFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
	    <filter-name>XTrackMDCPutFilter</filter-name>
	    <filter-class>org.terasoluna.gfw.web.logging.mdc.XTrackMDCPutFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>XTrackMDCPutFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!-- == Servlet Filter that exposes the request to the current thread == -->
	<filter>
		<filter-name>requestContextFilter</filter-name>
		<filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>requestContextFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!-- == Converts posted method parameters into HTTP methods == -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!-- == Allows to specify a character encoding for requests == -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--end::internals2[]-->
	
</web-fragment>