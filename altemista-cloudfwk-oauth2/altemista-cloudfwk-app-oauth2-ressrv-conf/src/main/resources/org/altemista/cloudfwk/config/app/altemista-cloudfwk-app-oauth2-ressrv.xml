<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

	<!-- The Security settings of the actual resources is to be provided by the application.
		E.g.:
		<security:http pattern="/api/**"
				create-session="stateless"
				entry-point-ref="oauth2AuthenticationEntryPoint"
				authentication-manager-ref="oauth2ResourceServerAuthenticationManager">
			
			<security:access-denied-handler ref="oauth2AccessDeniedHandler"/>
			<security:csrf disabled="true" />
			<security:custom-filter ref="oauth2AuthenticationFilter" before="PRE_AUTH_FILTER" />
			<security:expression-handler ref="oauth2ExpressionHandler"/>
			
			<security:intercept-url pattern="/**" access="authenticated"/>
		</security:http>
	-->

	<!--tag::internals[]-->
	<!-- Configures the OAuth 2.0 Resource Server infrastructure -->
	<oauth2:resource-server
			id="oauth2AuthenticationFilter"
			entry-point-ref="oauth2AuthenticationEntryPoint"
			resource-id="${oauth2.resourceServer.resourceId}"
			token-services-ref="oauth2ResourceServerTokenServices"
		/>
	
	<bean id="oauth2AuthenticationEntryPoint"
			class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"
		/>
	
	<bean id="oauth2AccessDeniedHandler"
			class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"
		/>
	
	<!-- (the AuthenticationManager is not actually used, but it is required by Spring Security) -->
	<security:authentication-manager id="oauth2ResourceServerAuthenticationManager" />
	
	<!--
		Default ResourceServerTokenServices that queries a remote authorization server
		(can be overriden by the application).
	 -->
	<bean id="oauth2ResourceServerTokenServices"
			class="org.springframework.security.oauth2.provider.token.RemoteTokenServices"
			primary="false">
		<property name="checkTokenEndpointUrl"	value="${oauth2.resourceServer.checkTokenEndpointUrl}" />
		<property name="clientId"				value="${oauth2.resourceServer.clientId}" />
		<property name="clientSecret"			value="${oauth2.resourceServer.clientSecret}" />
	</bean>
	
	<!-- Security expression handler that sets up the variable OAuth2SecurityExpressionMethods oauth2 -->
	<oauth2:web-expression-handler id="oauth2ExpressionHandler" />
	
	<!-- Replaces the framework's default method expression handler with the OAuth 2 expression handler -->
	<bean id="methodSecurityExpressionHandler"
			class="org.springframework.security.oauth2.provider.expression.OAuth2MethodSecurityExpressionHandler"
			primary="false">
	</bean>
	<!--end::internals[]-->
	
</beans>