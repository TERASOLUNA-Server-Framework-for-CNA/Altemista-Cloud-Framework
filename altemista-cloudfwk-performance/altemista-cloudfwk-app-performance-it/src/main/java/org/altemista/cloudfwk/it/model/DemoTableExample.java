package org.altemista.cloudfwk.it.model;

/*
 * #%L
 * altemista-cloud performance module integration tests
 * %%
 * Copyright (C) 2017 NTT DATA Corporation
 * %%
 * All rights reserved.
 * Todos los derechos reservados.
 * #L%
 */


import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DemoTableExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public DemoTableExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andKeyIsNull() {
            addCriterion("KEY is null");
            return (Criteria) this;
        }

        public Criteria andKeyIsNotNull() {
            addCriterion("KEY is not null");
            return (Criteria) this;
        }

        public Criteria andKeyEqualTo(Integer value) {
            addCriterion("KEY =", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotEqualTo(Integer value) {
            addCriterion("KEY <>", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyGreaterThan(Integer value) {
            addCriterion("KEY >", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyGreaterThanOrEqualTo(Integer value) {
            addCriterion("KEY >=", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyLessThan(Integer value) {
            addCriterion("KEY <", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyLessThanOrEqualTo(Integer value) {
            addCriterion("KEY <=", value, "key");
            return (Criteria) this;
        }

        public Criteria andKeyIn(List<Integer> values) {
            addCriterion("KEY in", values, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotIn(List<Integer> values) {
            addCriterion("KEY not in", values, "key");
            return (Criteria) this;
        }

        public Criteria andKeyBetween(Integer value1, Integer value2) {
            addCriterion("KEY between", value1, value2, "key");
            return (Criteria) this;
        }

        public Criteria andKeyNotBetween(Integer value1, Integer value2) {
            addCriterion("KEY not between", value1, value2, "key");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldIsNull() {
            addCriterion("INTEGER_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldIsNotNull() {
            addCriterion("INTEGER_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldEqualTo(Integer value) {
            addCriterion("INTEGER_FIELD =", value, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldNotEqualTo(Integer value) {
            addCriterion("INTEGER_FIELD <>", value, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldGreaterThan(Integer value) {
            addCriterion("INTEGER_FIELD >", value, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldGreaterThanOrEqualTo(Integer value) {
            addCriterion("INTEGER_FIELD >=", value, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldLessThan(Integer value) {
            addCriterion("INTEGER_FIELD <", value, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldLessThanOrEqualTo(Integer value) {
            addCriterion("INTEGER_FIELD <=", value, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldIn(List<Integer> values) {
            addCriterion("INTEGER_FIELD in", values, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldNotIn(List<Integer> values) {
            addCriterion("INTEGER_FIELD not in", values, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldBetween(Integer value1, Integer value2) {
            addCriterion("INTEGER_FIELD between", value1, value2, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntegerFieldNotBetween(Integer value1, Integer value2) {
            addCriterion("INTEGER_FIELD not between", value1, value2, "integerField");
            return (Criteria) this;
        }

        public Criteria andIntFieldIsNull() {
            addCriterion("INT_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andIntFieldIsNotNull() {
            addCriterion("INT_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andIntFieldEqualTo(Integer value) {
            addCriterion("INT_FIELD =", value, "intField");
            return (Criteria) this;
        }

        public Criteria andIntFieldNotEqualTo(Integer value) {
            addCriterion("INT_FIELD <>", value, "intField");
            return (Criteria) this;
        }

        public Criteria andIntFieldGreaterThan(Integer value) {
            addCriterion("INT_FIELD >", value, "intField");
            return (Criteria) this;
        }

        public Criteria andIntFieldGreaterThanOrEqualTo(Integer value) {
            addCriterion("INT_FIELD >=", value, "intField");
            return (Criteria) this;
        }

        public Criteria andIntFieldLessThan(Integer value) {
            addCriterion("INT_FIELD <", value, "intField");
            return (Criteria) this;
        }

        public Criteria andIntFieldLessThanOrEqualTo(Integer value) {
            addCriterion("INT_FIELD <=", value, "intField");
            return (Criteria) this;
        }

        public Criteria andIntFieldIn(List<Integer> values) {
            addCriterion("INT_FIELD in", values, "intField");
            return (Criteria) this;
        }

        public Criteria andIntFieldNotIn(List<Integer> values) {
            addCriterion("INT_FIELD not in", values, "intField");
            return (Criteria) this;
        }

        public Criteria andIntFieldBetween(Integer value1, Integer value2) {
            addCriterion("INT_FIELD between", value1, value2, "intField");
            return (Criteria) this;
        }

        public Criteria andIntFieldNotBetween(Integer value1, Integer value2) {
            addCriterion("INT_FIELD not between", value1, value2, "intField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldIsNull() {
            addCriterion("SMALLINT_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldIsNotNull() {
            addCriterion("SMALLINT_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldEqualTo(Short value) {
            addCriterion("SMALLINT_FIELD =", value, "smallintField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldNotEqualTo(Short value) {
            addCriterion("SMALLINT_FIELD <>", value, "smallintField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldGreaterThan(Short value) {
            addCriterion("SMALLINT_FIELD >", value, "smallintField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldGreaterThanOrEqualTo(Short value) {
            addCriterion("SMALLINT_FIELD >=", value, "smallintField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldLessThan(Short value) {
            addCriterion("SMALLINT_FIELD <", value, "smallintField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldLessThanOrEqualTo(Short value) {
            addCriterion("SMALLINT_FIELD <=", value, "smallintField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldIn(List<Short> values) {
            addCriterion("SMALLINT_FIELD in", values, "smallintField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldNotIn(List<Short> values) {
            addCriterion("SMALLINT_FIELD not in", values, "smallintField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldBetween(Short value1, Short value2) {
            addCriterion("SMALLINT_FIELD between", value1, value2, "smallintField");
            return (Criteria) this;
        }

        public Criteria andSmallintFieldNotBetween(Short value1, Short value2) {
            addCriterion("SMALLINT_FIELD not between", value1, value2, "smallintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldIsNull() {
            addCriterion("TINYINT_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldIsNotNull() {
            addCriterion("TINYINT_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldEqualTo(Byte value) {
            addCriterion("TINYINT_FIELD =", value, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldNotEqualTo(Byte value) {
            addCriterion("TINYINT_FIELD <>", value, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldGreaterThan(Byte value) {
            addCriterion("TINYINT_FIELD >", value, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldGreaterThanOrEqualTo(Byte value) {
            addCriterion("TINYINT_FIELD >=", value, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldLessThan(Byte value) {
            addCriterion("TINYINT_FIELD <", value, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldLessThanOrEqualTo(Byte value) {
            addCriterion("TINYINT_FIELD <=", value, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldIn(List<Byte> values) {
            addCriterion("TINYINT_FIELD in", values, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldNotIn(List<Byte> values) {
            addCriterion("TINYINT_FIELD not in", values, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldBetween(Byte value1, Byte value2) {
            addCriterion("TINYINT_FIELD between", value1, value2, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andTinyintFieldNotBetween(Byte value1, Byte value2) {
            addCriterion("TINYINT_FIELD not between", value1, value2, "tinyintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldIsNull() {
            addCriterion("BIGINT_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andBigintFieldIsNotNull() {
            addCriterion("BIGINT_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andBigintFieldEqualTo(Long value) {
            addCriterion("BIGINT_FIELD =", value, "bigintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldNotEqualTo(Long value) {
            addCriterion("BIGINT_FIELD <>", value, "bigintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldGreaterThan(Long value) {
            addCriterion("BIGINT_FIELD >", value, "bigintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldGreaterThanOrEqualTo(Long value) {
            addCriterion("BIGINT_FIELD >=", value, "bigintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldLessThan(Long value) {
            addCriterion("BIGINT_FIELD <", value, "bigintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldLessThanOrEqualTo(Long value) {
            addCriterion("BIGINT_FIELD <=", value, "bigintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldIn(List<Long> values) {
            addCriterion("BIGINT_FIELD in", values, "bigintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldNotIn(List<Long> values) {
            addCriterion("BIGINT_FIELD not in", values, "bigintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldBetween(Long value1, Long value2) {
            addCriterion("BIGINT_FIELD between", value1, value2, "bigintField");
            return (Criteria) this;
        }

        public Criteria andBigintFieldNotBetween(Long value1, Long value2) {
            addCriterion("BIGINT_FIELD not between", value1, value2, "bigintField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldIsNull() {
            addCriterion("DECIMAL_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldIsNotNull() {
            addCriterion("DECIMAL_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldEqualTo(BigDecimal value) {
            addCriterion("DECIMAL_FIELD =", value, "decimalField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldNotEqualTo(BigDecimal value) {
            addCriterion("DECIMAL_FIELD <>", value, "decimalField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldGreaterThan(BigDecimal value) {
            addCriterion("DECIMAL_FIELD >", value, "decimalField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("DECIMAL_FIELD >=", value, "decimalField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldLessThan(BigDecimal value) {
            addCriterion("DECIMAL_FIELD <", value, "decimalField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldLessThanOrEqualTo(BigDecimal value) {
            addCriterion("DECIMAL_FIELD <=", value, "decimalField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldIn(List<BigDecimal> values) {
            addCriterion("DECIMAL_FIELD in", values, "decimalField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldNotIn(List<BigDecimal> values) {
            addCriterion("DECIMAL_FIELD not in", values, "decimalField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DECIMAL_FIELD between", value1, value2, "decimalField");
            return (Criteria) this;
        }

        public Criteria andDecimalFieldNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DECIMAL_FIELD not between", value1, value2, "decimalField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldIsNull() {
            addCriterion("NUMERIC_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andNumericFieldIsNotNull() {
            addCriterion("NUMERIC_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andNumericFieldEqualTo(BigDecimal value) {
            addCriterion("NUMERIC_FIELD =", value, "numericField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldNotEqualTo(BigDecimal value) {
            addCriterion("NUMERIC_FIELD <>", value, "numericField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldGreaterThan(BigDecimal value) {
            addCriterion("NUMERIC_FIELD >", value, "numericField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("NUMERIC_FIELD >=", value, "numericField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldLessThan(BigDecimal value) {
            addCriterion("NUMERIC_FIELD <", value, "numericField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldLessThanOrEqualTo(BigDecimal value) {
            addCriterion("NUMERIC_FIELD <=", value, "numericField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldIn(List<BigDecimal> values) {
            addCriterion("NUMERIC_FIELD in", values, "numericField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldNotIn(List<BigDecimal> values) {
            addCriterion("NUMERIC_FIELD not in", values, "numericField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("NUMERIC_FIELD between", value1, value2, "numericField");
            return (Criteria) this;
        }

        public Criteria andNumericFieldNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("NUMERIC_FIELD not between", value1, value2, "numericField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldIsNull() {
            addCriterion("FLOAT_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andFloatFieldIsNotNull() {
            addCriterion("FLOAT_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andFloatFieldEqualTo(Double value) {
            addCriterion("FLOAT_FIELD =", value, "floatField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldNotEqualTo(Double value) {
            addCriterion("FLOAT_FIELD <>", value, "floatField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldGreaterThan(Double value) {
            addCriterion("FLOAT_FIELD >", value, "floatField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldGreaterThanOrEqualTo(Double value) {
            addCriterion("FLOAT_FIELD >=", value, "floatField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldLessThan(Double value) {
            addCriterion("FLOAT_FIELD <", value, "floatField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldLessThanOrEqualTo(Double value) {
            addCriterion("FLOAT_FIELD <=", value, "floatField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldIn(List<Double> values) {
            addCriterion("FLOAT_FIELD in", values, "floatField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldNotIn(List<Double> values) {
            addCriterion("FLOAT_FIELD not in", values, "floatField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldBetween(Double value1, Double value2) {
            addCriterion("FLOAT_FIELD between", value1, value2, "floatField");
            return (Criteria) this;
        }

        public Criteria andFloatFieldNotBetween(Double value1, Double value2) {
            addCriterion("FLOAT_FIELD not between", value1, value2, "floatField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldIsNull() {
            addCriterion("DOUBLE_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldIsNotNull() {
            addCriterion("DOUBLE_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldEqualTo(Double value) {
            addCriterion("DOUBLE_FIELD =", value, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldNotEqualTo(Double value) {
            addCriterion("DOUBLE_FIELD <>", value, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldGreaterThan(Double value) {
            addCriterion("DOUBLE_FIELD >", value, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldGreaterThanOrEqualTo(Double value) {
            addCriterion("DOUBLE_FIELD >=", value, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldLessThan(Double value) {
            addCriterion("DOUBLE_FIELD <", value, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldLessThanOrEqualTo(Double value) {
            addCriterion("DOUBLE_FIELD <=", value, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldIn(List<Double> values) {
            addCriterion("DOUBLE_FIELD in", values, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldNotIn(List<Double> values) {
            addCriterion("DOUBLE_FIELD not in", values, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldBetween(Double value1, Double value2) {
            addCriterion("DOUBLE_FIELD between", value1, value2, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDoubleFieldNotBetween(Double value1, Double value2) {
            addCriterion("DOUBLE_FIELD not between", value1, value2, "doubleField");
            return (Criteria) this;
        }

        public Criteria andDateFieldIsNull() {
            addCriterion("DATE_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andDateFieldIsNotNull() {
            addCriterion("DATE_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andDateFieldEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_FIELD =", value, "dateField");
            return (Criteria) this;
        }

        public Criteria andDateFieldNotEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_FIELD <>", value, "dateField");
            return (Criteria) this;
        }

        public Criteria andDateFieldGreaterThan(Date value) {
            addCriterionForJDBCDate("DATE_FIELD >", value, "dateField");
            return (Criteria) this;
        }

        public Criteria andDateFieldGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_FIELD >=", value, "dateField");
            return (Criteria) this;
        }

        public Criteria andDateFieldLessThan(Date value) {
            addCriterionForJDBCDate("DATE_FIELD <", value, "dateField");
            return (Criteria) this;
        }

        public Criteria andDateFieldLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_FIELD <=", value, "dateField");
            return (Criteria) this;
        }

        public Criteria andDateFieldIn(List<Date> values) {
            addCriterionForJDBCDate("DATE_FIELD in", values, "dateField");
            return (Criteria) this;
        }

        public Criteria andDateFieldNotIn(List<Date> values) {
            addCriterionForJDBCDate("DATE_FIELD not in", values, "dateField");
            return (Criteria) this;
        }

        public Criteria andDateFieldBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE_FIELD between", value1, value2, "dateField");
            return (Criteria) this;
        }

        public Criteria andDateFieldNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE_FIELD not between", value1, value2, "dateField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldIsNull() {
            addCriterion("DATETIME_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldIsNotNull() {
            addCriterion("DATETIME_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldEqualTo(Date value) {
            addCriterion("DATETIME_FIELD =", value, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldNotEqualTo(Date value) {
            addCriterion("DATETIME_FIELD <>", value, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldGreaterThan(Date value) {
            addCriterion("DATETIME_FIELD >", value, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldGreaterThanOrEqualTo(Date value) {
            addCriterion("DATETIME_FIELD >=", value, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldLessThan(Date value) {
            addCriterion("DATETIME_FIELD <", value, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldLessThanOrEqualTo(Date value) {
            addCriterion("DATETIME_FIELD <=", value, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldIn(List<Date> values) {
            addCriterion("DATETIME_FIELD in", values, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldNotIn(List<Date> values) {
            addCriterion("DATETIME_FIELD not in", values, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldBetween(Date value1, Date value2) {
            addCriterion("DATETIME_FIELD between", value1, value2, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andDatetimeFieldNotBetween(Date value1, Date value2) {
            addCriterion("DATETIME_FIELD not between", value1, value2, "datetimeField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldIsNull() {
            addCriterion("TIMESTAMP_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldIsNotNull() {
            addCriterion("TIMESTAMP_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldEqualTo(Date value) {
            addCriterion("TIMESTAMP_FIELD =", value, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldNotEqualTo(Date value) {
            addCriterion("TIMESTAMP_FIELD <>", value, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldGreaterThan(Date value) {
            addCriterion("TIMESTAMP_FIELD >", value, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldGreaterThanOrEqualTo(Date value) {
            addCriterion("TIMESTAMP_FIELD >=", value, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldLessThan(Date value) {
            addCriterion("TIMESTAMP_FIELD <", value, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldLessThanOrEqualTo(Date value) {
            addCriterion("TIMESTAMP_FIELD <=", value, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldIn(List<Date> values) {
            addCriterion("TIMESTAMP_FIELD in", values, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldNotIn(List<Date> values) {
            addCriterion("TIMESTAMP_FIELD not in", values, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldBetween(Date value1, Date value2) {
            addCriterion("TIMESTAMP_FIELD between", value1, value2, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimestampFieldNotBetween(Date value1, Date value2) {
            addCriterion("TIMESTAMP_FIELD not between", value1, value2, "timestampField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldIsNull() {
            addCriterion("TIME_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andTimeFieldIsNotNull() {
            addCriterion("TIME_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andTimeFieldEqualTo(Date value) {
            addCriterionForJDBCTime("TIME_FIELD =", value, "timeField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldNotEqualTo(Date value) {
            addCriterionForJDBCTime("TIME_FIELD <>", value, "timeField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldGreaterThan(Date value) {
            addCriterionForJDBCTime("TIME_FIELD >", value, "timeField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("TIME_FIELD >=", value, "timeField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldLessThan(Date value) {
            addCriterionForJDBCTime("TIME_FIELD <", value, "timeField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("TIME_FIELD <=", value, "timeField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldIn(List<Date> values) {
            addCriterionForJDBCTime("TIME_FIELD in", values, "timeField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldNotIn(List<Date> values) {
            addCriterionForJDBCTime("TIME_FIELD not in", values, "timeField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("TIME_FIELD between", value1, value2, "timeField");
            return (Criteria) this;
        }

        public Criteria andTimeFieldNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("TIME_FIELD not between", value1, value2, "timeField");
            return (Criteria) this;
        }

        public Criteria andCharFieldIsNull() {
            addCriterion("CHAR_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andCharFieldIsNotNull() {
            addCriterion("CHAR_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andCharFieldEqualTo(String value) {
            addCriterion("CHAR_FIELD =", value, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldNotEqualTo(String value) {
            addCriterion("CHAR_FIELD <>", value, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldGreaterThan(String value) {
            addCriterion("CHAR_FIELD >", value, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldGreaterThanOrEqualTo(String value) {
            addCriterion("CHAR_FIELD >=", value, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldLessThan(String value) {
            addCriterion("CHAR_FIELD <", value, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldLessThanOrEqualTo(String value) {
            addCriterion("CHAR_FIELD <=", value, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldLike(String value) {
            addCriterion("CHAR_FIELD like", value, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldNotLike(String value) {
            addCriterion("CHAR_FIELD not like", value, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldIn(List<String> values) {
            addCriterion("CHAR_FIELD in", values, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldNotIn(List<String> values) {
            addCriterion("CHAR_FIELD not in", values, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldBetween(String value1, String value2) {
            addCriterion("CHAR_FIELD between", value1, value2, "charField");
            return (Criteria) this;
        }

        public Criteria andCharFieldNotBetween(String value1, String value2) {
            addCriterion("CHAR_FIELD not between", value1, value2, "charField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldIsNull() {
            addCriterion("VARCHAR_FIELD is null");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldIsNotNull() {
            addCriterion("VARCHAR_FIELD is not null");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldEqualTo(String value) {
            addCriterion("VARCHAR_FIELD =", value, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldNotEqualTo(String value) {
            addCriterion("VARCHAR_FIELD <>", value, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldGreaterThan(String value) {
            addCriterion("VARCHAR_FIELD >", value, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldGreaterThanOrEqualTo(String value) {
            addCriterion("VARCHAR_FIELD >=", value, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldLessThan(String value) {
            addCriterion("VARCHAR_FIELD <", value, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldLessThanOrEqualTo(String value) {
            addCriterion("VARCHAR_FIELD <=", value, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldLike(String value) {
            addCriterion("VARCHAR_FIELD like", value, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldNotLike(String value) {
            addCriterion("VARCHAR_FIELD not like", value, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldIn(List<String> values) {
            addCriterion("VARCHAR_FIELD in", values, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldNotIn(List<String> values) {
            addCriterion("VARCHAR_FIELD not in", values, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldBetween(String value1, String value2) {
            addCriterion("VARCHAR_FIELD between", value1, value2, "varcharField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldNotBetween(String value1, String value2) {
            addCriterion("VARCHAR_FIELD not between", value1, value2, "varcharField");
            return (Criteria) this;
        }

        public Criteria andCharFieldLikeInsensitive(String value) {
            addCriterion("upper(CHAR_FIELD) like", value.toUpperCase(), "charField");
            return (Criteria) this;
        }

        public Criteria andVarcharFieldLikeInsensitive(String value) {
            addCriterion("upper(VARCHAR_FIELD) like", value.toUpperCase(), "varcharField");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated do_not_delete_during_merge Sat Jun 11 14:07:11 CEST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DEMO_TABLE
     *
     * @mbggenerated Sat Jun 11 14:07:11 CEST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
