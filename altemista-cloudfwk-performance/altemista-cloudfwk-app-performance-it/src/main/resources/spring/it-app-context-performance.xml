<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
		
	<!-- The example services -->
	<context:component-scan base-package="org.altemista.cloudfwk.it" />

	<!-- The example repositories -->
	<mybatis:scan base-package="org.altemista.cloudfwk.it.repository" />
	
	<!-- == Method execution == -->
	
	<!-- Activates the method execution performance aspect -->
	<aop:config>
		<aop:aspect ref="methodExecutionPerformanceAspect">
			<aop:pointcut id="applicationMethod" expression="within(org.altemista.cloudfwk.it..*) and !within(org.altemista.cloudfwk.it.controller..*)" />
			<aop:around pointcut-ref="applicationMethod" method="invoke"/>
		</aop:aspect>
	</aop:config>

	<!-- Overrides the method execution storage to include the logging wrapper -->
	<bean id="methodExecutionMeasuresStorage" class="org.altemista.cloudfwk.core.performance.impl.LogMeasuresStorageWrapperImpl">
		<!-- The actual storage -->
		<property name="target" ref="methodExecutionMeasuresStorageInternal" />
	</bean>
	<bean id="methodExecutionMeasuresStorageInternal" class="org.altemista.cloudfwk.core.performance.impl.LongestMeasuresStorageImpl" />

	<!-- == JDBC == -->

	<!-- In-memory example database -->
	<jdbc:embedded-database id="dataSourceTest">
		<jdbc:script location="classpath:scripts/schema.sql" />
		<jdbc:script location="classpath:scripts/data.sql" />
	</jdbc:embedded-database>
	
	<!-- Puts the Invocation handler over the original dataSource -->
	<bean id="wrappedDataSource" class="org.altemista.cloudfwk.performance.jdbc.proxy.DataSourceHandler" factory-method="handle">
		<constructor-arg ref="dataSourceTest" />
		<constructor-arg ref="jdbcMeasuredTaskHolder" />
		<constructor-arg ref="jdbcMeasuresStorage" />
		<constructor-arg value="org.altemista.cloudfwk.it.repository.*" />
	</bean>

	<!-- Provides the wrapped dataSource as the "myBatisDataSource" bean required in altemista-cloudfwk-persistence-mybatis-config -->
	<alias name="wrappedDataSource" alias="myBatisDataSource" />

	<!-- Overrides the JDBC storage to include the logging wrapper -->
	<bean id="jdbcMeasuresStorage" class="org.altemista.cloudfwk.core.performance.impl.LogMeasuresStorageWrapperImpl">
		<!-- The actual storage -->
		<property name="target" ref="jdbcMeasuresStorageInternal" />
	</bean>
	<bean id="jdbcMeasuresStorageInternal" class="org.altemista.cloudfwk.core.performance.impl.LongestMeasuresStorageImpl" />

</beans>