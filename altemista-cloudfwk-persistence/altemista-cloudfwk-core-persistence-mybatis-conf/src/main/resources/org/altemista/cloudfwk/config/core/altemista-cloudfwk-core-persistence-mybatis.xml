<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--tag::internals[]-->
	<!-- In base MyBatis, the SqlSessionFactory is built using SqlSessionFactoryBuilder.
		In MyBatis-Spring, SqlSessionFactoryBean is used instead -->
	<bean id="sqlSessionFactory"
			class="org.mybatis.spring.SqlSessionFactoryBean">
	
		<property name="configLocation"
				value="classpath:config/mybatis/mybatis-config.xml" /> <!--1-->
		<property name="dataSource"
				ref="myBatisDataSource" /> <!--2-->
		<property name="failFast"
				value="${persistence.mybatis.failFast:true}" />
		<property name="mapperLocations"
				value="${persistence.mybatis.mapperLocations}" /> <!--3-->
	</bean>
	
	<!-- Translates MyBatis SqlSession returned exception
		into a Spring DataAccessException -->
	<bean id="myBatisExceptionTranslator"
			class="org.mybatis.spring.MyBatisExceptionTranslator">
		
		<constructor-arg ref="myBatisDataSource" /> <!--2-->
		<constructor-arg name="exceptionTranslatorLazyInit" value="false" />
	</bean>
	
	<!-- Binds a TransactionManager to the MyBatis EntityManager -->
	<bean id="myBatisTransactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		
		<property name="dataSource" ref="myBatisDataSource" /> <!--2-->
	</bean>
	<!--end::internals[]-->
	
</beans>