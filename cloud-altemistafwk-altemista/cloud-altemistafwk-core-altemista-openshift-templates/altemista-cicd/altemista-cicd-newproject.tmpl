apiVersion: v1
kind: Template
labels:
  template: acf-cicd
  group: cicd
metadata:
  name: DEF_PREFIX-newproject
  annotations:
    description: Altemista Cloudfwk CICD Template
parameters:
- displayName: DEV Project
  value: DEF_DEV_PROJECT
  name: DEV_PROJECT
  required: true
- displayName: STAGE Project
  value: DEF_STAGE_PROJECT
  name: STAGE_PROJECT
  required: true
- displayName: PRO Project
  value: DEF_PRO_PROJECT
  name: PRO_PROJECT
  required: true
- description: Webhook secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: WEBHOOK_SECRET
  required: true
- description: GOGS User
  value: DEF_GOGS_USER
  name: GOGS_USER
  required: true
- description: GOGS password
  value: DEF_GOGS_PWD
  name: GOGS_PWD
  required: true
- description: GOGS mail
  name: GOGS_MAIL
  value: DEF_GOGS_MAIL
  required: true
- description: Application GroupId
  name: APP_GI
  value: DEF_APP_GI
  required: true
- description: Application Artifact ID
  name: APP_AI
  value: baseApp
  required: true
- description: Application Version
  name: APP_V
  value: DEF_APP_V
  required: true
- description: Application ShortId ID
  name: APP_SI
  value: shortId
  required: true
- description: Framework Version
  name: TSF_V
  value: DEV_TSF_V
  required: true
- description: CICD id lower case of Application ArtifactId
  name: CICD_ID
  value: baseapp
  required: true
objects:
- apiVersion: batch/v1
  kind: Job
  metadata:
    name: cicd-demo-installer-${CICD_ID}
  spec:
    activeDeadlineSeconds: 900
    completions: 1
    parallelism: 1
    template:
      spec:
        containers:
        - env:
          - name: CICD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          command:
          - /bin/bash
          - -x
          - -c
          - |
            GOGS_SVC=$(oc get svc gogs -o template --template='{{.spec.clusterIP}}')
            NEXUS_SVC=$(oc get svc nexus -o template --template='{{.spec.clusterIP}}')

            # Migrate Altemista Cloudfwk - BE - repository to new gogs
            cat <<EOF > /tmp/data.json
            {
                "name": "${APP_AI}",
                "description": "This is your first repository",
                "auto_init": true,
                "gitignores": "Java",
                "license": "MIT License",
                "readme": "Default"
                
            }
            EOF
            _RETURN=$(curl -o /tmp/curl.log -sL -w "%{http_code}" -H "Content-Type: application/json" \
            -u ${GOGS_USER}:${GOGS_PWD} -X POST http://$GOGS_SVC:3000/api/v1/user/repos -d @/tmp/data.json)
            if [ $_RETURN != "201" ] ;then
              echo "ERROR: Failed to import terasoluna-base-be GitHub repo"
              cat /tmp/curl.log
              exit 255
            fi
            sleep 5
            
            mkdir /tmp/code
            
            export GIT_COMMITTER_NAME=${GOGS_USER}
            export GIT_COMMITTER_EMAIL=${GOGS_MAIL}
            export GIT_AUTHOR_NAME=${GOGS_USER}
            export GIT_AUTHOR_EMAIL=${GOGS_MAIL}
            
            git clone http://${GOGS_USER}:${GOGS_PWD}@$GOGS_SVC:3000/${GOGS_USER}/${APP_AI}.git /tmp/code
            cd /tmp/code
            
            echo "ACF Base code">>README.md
            git add README.md
            
            AT_GI=cloud.altemista.fwk.archetype
            AT_AI=cloud-altemistafwk-boot-archetype
            AT_V=1.2.0.RELEASE
            mkdir .settings
            curl https://altemista-gogs.helix.everis.cloud/Terasoluna/terasoluna-base-be/raw/master/.settings/cicd-settings-nexus3.xml > .settings/cicd-settings-nexus3.xml
            _RETURN=000
            while [ $_RETURN != "200" ] && [ $_RETURN != "302" ] ; do
              echo "wait for nexus"
              _RETURN=$(curl -o /tmp/curl.log -sL --post302 -w "%{http_code}" http://$NEXUS_SVC:8081/)
              sleep 5
            done
            
            while [ $_RETURN != "200" ] && [ $_RETURN != "302" ] ; do
              echo "wait for nexus"
              _RETURN=$(curl -o /tmp/curl.log -sL --post302 -w "%{http_code}" http://nexus:8081/repository/maven-all-public/org/apache/maven/plugins/maven-clean-plugin/2.5/maven-clean-plugin-2.5.pom )
              sleep 5
            done

            mvn archetype:generate -s .settings/cicd-settings-nexus3.xml -Dmaven.repo.local=/tmp/m2 -DarchetypeGroupId=${AT_GI} -DarchetypeArtifactId=${AT_AI} -DarchetypeVersion=${AT_V} -DgroupId=${APP_GI} -DartifactId=${APP_AI} -Dversion=${APP_V} -Dpackage=${APP_GI} -DappShortId=${APP_SI} -DterasolunaPlusVersion=${TSF_V} -DinteractiveMode=no
            cp -a ${APP_AI}/. .
            rm -rf ${APP_AI}
            git add ./*
            git add .settings/cicd-settings-nexus3.xml
            
            git commit -m "First commit"
            git push     
            
            git branch develop
            git commit -m "develop Branch"
            git push -u origin develop
            
            sleep 5
            
            cd /tmp/
            mkdir cicd
            git clone http://${GOGS_USER}:${GOGS_PWD}@$GOGS_SVC:3000/${GOGS_USER}/cicd.git /tmp/cicd
            cd cicd
            mkdir ${APP_AI}
            cd ${APP_AI}
            
            curl https://altemista-gogs.helix.everis.cloud/Terasoluna/terasoluna-cicd/raw/master/jenkinsFiles/update.sh > update.sh
            sh update.sh ${DEV_PROJECT} ${STAGE_PROJECT} ${PRO_PROJECT} ${APP_AI} ${GOGS_USER} ${CICD_ID} ${WEBHOOK_SECRET}
            rm *.sh
            
            git add *
            cd ..
            git commit -m "Pipelines for ${APP_AI}"
            git push
            
            oc apply -f ${APP_AI}/openshift.yaml
                   
            
            cat <<EOF > /tmp/data.json
            {
              "type": "gogs",
              "config": {
                "url": "https://openshift.default.svc.cluster.local/oapi/v1/namespaces/$CICD_NAMESPACE/buildconfigs/dev-${CICD_ID}-pipeline/webhooks/${WEBHOOK_SECRET}/generic",
                "content_type": "json"
              },
              "events": [
                "push"
              ],
              "active": true
            }
            EOF
            _RETURN=$(curl -o /tmp/curl.log -sL -w "%{http_code}" -H "Content-Type: application/json" \
            -u ${GOGS_USER}:${GOGS_PWD} -X POST http://$GOGS_SVC:3000/api/v1/repos/gogs/${APP_AI}/hooks -d @/tmp/data.json)
            if [ $_RETURN != "201" ] ; then
              echo "ERROR: Failed to set webhook"
              cat /tmp/curl.log
              exit 255
            fi
          image: 172.30.6.125:5000/openshift/jenkins-slave-maven-nodejs-kube-rhel7:latest
          imagePullPolicy: IfNotPresent 
          name: cicd-demo-installer-${CICD_ID}-job
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Never
