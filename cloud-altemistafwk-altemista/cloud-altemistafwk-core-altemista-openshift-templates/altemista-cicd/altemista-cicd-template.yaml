apiVersion: v1
kind: Template
labels:
  template: acf-cicd
  group: cicd
metadata:
  name: acf-cicd-template
  annotations:
    description: Altemista Cloudfwk CICD Template
parameters:
- displayName: DEV Project
  value: dev
  name: DEV_PROJECT
  required: true
- displayName: STAGE Project
  value: stage
  name: STAGE_PROJECT
  required: true
- displayName: PRO Project
  value: pro
  name: PRO_PROJECT
  required: true
- description: Webhook secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: WEBHOOK_SECRET
  required: true
- description: GOGS User
  value: gogs
  name: GOGS_USER
  required: true
- description: GOGS password
  value: gogs
  name: GOGS_PWD
  required: true
- description: GOGS mail
  name: GOGS_MAIL
  value: gogs@gogs.com
  required: true
- description: Application GroupId
  name: APP_GI
  value: es.altemista.tsf
  required: true
- description: Application Artifact ID
  name: APP_AI
  value: baseApp
  required: true
- description: Application Version
  name: APP_V
  value: 1.0.0-SNAPSHOT
  required: true
- description: Application ShortId ID
  name: APP_SI
  value: shortId
  required: true
- description: Framework Version
  name: TSF_V
  value: 1.2.0.RELEASE
  required: true
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: cicd-pipeline
      role: jenkins-slave
    name: jenkins-slaves
  data:
    maven-template: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
        <inheritFrom></inheritFrom>
        <name>maven</name>
        <privileged>false</privileged>
        <alwaysPullImage>false</alwaysPullImage>
        <instanceCap>2147483647</instanceCap>
        <idleMinutes>0</idleMinutes>
        <label>maven</label>
        <serviceAccount>jenkins</serviceAccount>
        <nodeSelector></nodeSelector>
        <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
        <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
          <memory>false</memory>
        </workspaceVolume>
        <volumes />
        <containers>
          <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
            <name>jnlp</name>
            <image>registry.access.redhat.com/openshift3/jenkins-slave-maven-rhel7</image>
            <privileged>false</privileged>
            <alwaysPullImage>false</alwaysPullImage>
            <workingDir>/tmp</workingDir>
            <command></command>
            <args>${computer.jnlpmac} ${computer.name}</args>
            <ttyEnabled>false</ttyEnabled>
            <resourceRequestCpu>200m</resourceRequestCpu>
            <resourceRequestMemory>512Mi</resourceRequestMemory>
            <resourceLimitCpu>2</resourceLimitCpu>
            <resourceLimitMemory>4Gi</resourceLimitMemory>
            <envVars>
                <org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
                    <key>JENKINS_URL</key>
                    <value>http://jenkins:80/</value>
                </org.csanchez.jenkins.plugins.kubernetes.PodEnvVar>
          </envVars>
          </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
        </containers>
        <envVars/>
        <annotations/>
        <imagePullSecrets/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
# JOB to deploy GOGS, Sonar, ...
- apiVersion: batch/v1
  kind: Job
  metadata:
    name: cicd-demo-installer
  spec:
    activeDeadlineSeconds: 900
    completions: 1
    parallelism: 1
    template:
      spec:
        containers:
        - env:
          - name: CICD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          command:
          - /bin/bash
          - -x
          - -c
          - |
            GOGS_SVC=$(oc get svc gogs -o template --template='{{.spec.clusterIP}}')
            NEXUS_SVC=$(oc get svc nexus -o template --template='{{.spec.clusterIP}}')
            
            CICD_ID=${APP_AI}
            CICD_ID=${CICD_ID,,}

            _RETURN=$(curl -o /tmp/curl.log -sL --post302 -w "%{http_code}" http://$GOGS_SVC:3000/user/sign_up \
              --form user_name=${GOGS_USER} \
              --form password=${GOGS_PWD} \
              --form retype=${GOGS_PWD} \
              --form email=${GOGS_MAIL})
            sleep 5
            while [ $_RETURN != "200" ] && [ $_RETURN != "302" ] ; do
              _RETURN=$(curl -o /tmp/curl.log -sL --post302 -w "%{http_code}" http://$GOGS_SVC:3000/user/sign_up \
              --form user_name=${GOGS_USER} \
              --form password=${GOGS_PWD} \
              --form retype=${GOGS_PWD} \
              --form email=${GOGS_MAIL})
              sleep 5
            done

            # Migrate Altemista Cloudfwk - BE - repository to new gogs
            cat <<EOF > /tmp/data.json
            {
                "name": "cicd",
                "description": "CICD repository",
                "auto_init": true,
                "gitignores": "Java",
                "license": "MIT License",
                "readme": "Default"
                
            }
            EOF
            _RETURN=$(curl -o /tmp/curl.log -sL -w "%{http_code}" -H "Content-Type: application/json" \
            -u ${GOGS_USER}:${GOGS_PWD} -X POST http://$GOGS_SVC:3000/api/v1/user/repos -d @/tmp/data.json)
            if [ $_RETURN != "201" ] ;then
              echo "ERROR: Failed to import terasoluna-base-be GitHub repo"
              cat /tmp/curl.log                
              _RETURN=$(curl -o /tmp/curl.log -u ${GOGS_USER}:${GOGS_PWD} -sL --post302 -w "%{http_code}" http://$GOGS_SVC:3000/${GOGS_USER}/cicd)
              if [ $_RETURN == "404" ] ;then
                exit 255
              fi
            fi
            sleep 5
            cd /tmp/
            curl https://altemista-gogs.helix.everis.cloud/Terasoluna/terasoluna-cicd/raw/master/terasoluna-cicd-newproject.tmpl > terasoluna-cicd-newproject.yaml
            sed -i s/DEF_DEV_PROJECT/${DEV_PROJECT}/ altemista-cicd-newproject.yaml
            sed -i s/DEF_STAGE_PROJECT/${STAGE_PROJECT}/ altemista-cicd-newproject.yaml
            sed -i s/DEF_PRO_PROJECT/${PRO_PROJECT}/ altemista-cicd-newproject.yaml
            sed -i s/DEF_GOGS_USER/${GOGS_USER}/ altemista-cicd-newproject.yaml
            sed -i s/DEF_GOGS_PWD/${GOGS_PWD}/ altemista-cicd-newproject.yaml
            sed -i s/DEF_GOGS_MAIL/${GOGS_MAIL}/ altemista-cicd-newproject.yaml
            sed -i s/DEF_APP_GI/${APP_GI}/ altemista-cicd-newproject.yaml
            sed -i s/DEF_APP_V/${APP_V}/ altemista-cicd-newproject.yaml
            sed -i s/DEV_TSF_V/${TSF_V}/ altemista-cicd-newproject.yaml
            sed -i s/DEF_PREFIX/${DEV_PROJECT}/ altemista-cicd-newproject.yaml
            
            more altemista-cicd-newproject.yaml
            
            oc create -f altemista-cicd-newproject.yaml
            
            oc new-app -f altemista-cicd-newproject.yaml \
                --param=DEV_PROJECT=${DEV_PROJECT} \
                --param=STAGE_PROJECT=${STAGE_PROJECT} \
                --param=PRO_PROJECT=${PRO_PROJECT} \
                --param=GOGS_USER=${GOGS_USER} \
                --param=GOGS_PWD=${GOGS_PWD} \
                --param=GOGS_MAIL=${GOGS_MAIL} \
                --param=APP_GI=${APP_GI} \
                --param=APP_AI=${APP_AI} \
                --param=APP_V=${APP_V} \
                --param=APP_SI=${APP_SI} \
                --param=TSF_V=${TSF_V} \
                --param=CICD_ID=${CICD_ID} \
             
          image: 172.30.6.125:5000/openshift/jenkins-slave-maven-nodejs-kube-rhel7:latest
          imagePullPolicy: IfNotPresent 
          name: cicd-demo-installer-job
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Never


              