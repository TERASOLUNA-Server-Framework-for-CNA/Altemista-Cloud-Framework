<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cloud.altemista.fwk.framework</groupId>
	<artifactId>cloud-altemistafwk-bom-3rdparty</artifactId>
	<version>3.0.0.RELEASE</version>
	<packaging>pom</packaging>

	<name>cloud-altemistafwk framework: 3rd parties bill of materials</name>
	<description>Bill of materials of the 3rd party libraries used with ACF framework</description>
	<url>https://terasoluna.everis.com/</url>
	
	<developers>
    	<developer>
      		<name>Altemista Cloud Framework</name>
      		<email>tsfplus@everis.com</email>
      		<organization>NTT DATA Corporation</organization>
      		<organizationUrl>https://terasoluna.everis.com/</organizationUrl>
    	</developer>
  	</developers>
  	
  	<scm>
  		<connection>scm:git:git://github.com/TERASOLUNA-Server-Framework-for-CNA/Altemista-Cloud-Framework.git</connection>
  		<developerConnection>scm:git:ssh://github.com:TERASOLUNA-Server-Framework-for-CNA/Altemista-Cloud-Framework.git</developerConnection>
  		<url>http://github.com/TERASOLUNA-Server-Framework-for-CNA/Altemista-Cloud-Framework/tree/master</url>
  	</scm>
  	
  	<licenses>
  		<license>
    		<name>The Apache License, Version 2.0</name>
    		<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
  		</license>
	</licenses>  	
  	

	<properties>
		<!-- == Terasoluna Server Framework for Java == -->
		<terasoluna.version>5.5.0.RELEASE</terasoluna.version>

		<!-- == Java standard extensions == -->
		<javax-javaee.version>7.0</javax-javaee.version>

		<!-- == Other libraries versions == -->
		<activiti.version>5.22.0</activiti.version>
		<aether.version>1.0.0.v20140518</aether.version><!-- Overrides aether dependency:1.0.2.v20150114 
			in Spring Cloud -->
		<apache-cxf.version>3.1.11</apache-cxf.version>
		<commons-collections4.version>4.1</commons-collections4.version>
		<commons-dbutils.version>1.6</commons-dbutils.version>
		<drools.version>6.5.0.Final</drools.version>
		<hibernate-jpa-2.1-api.version>1.0.0.Final</hibernate-jpa-2.1-api.version>
		<itextpdf.version>5.5.9</itextpdf.version><!-- TBD: investigate iText 7.0.2 -->
		<jasperreports-fonts.version>6.0.0</jasperreports-fonts.version>
		<jasperreports.version>6.5.1</jasperreports.version>
		<itext.version>4.2.1</itext.version>
		<javax-annotation.version>1.2</javax-annotation.version>
		<javax-jms.version>2.0.1</javax-jms.version>
		<javax-jsr173.version>1.0</javax-jsr173.version>
		<javax-jsr181.version>1.0-MR1</javax-jsr181.version>
		<javax-el.version>2.2.5</javax-el.version>
		<jaxws-api.version>2.2.11</jaxws-api.version>
		<jaxws-rt.version>2.2.10</jaxws-rt.version>
		<maven.aether.provider.version>3.2.5</maven.aether.provider.version><!-- 
			Overrides Maven Aether Provider dependency:3.2.1 in Spring Cloud -->
		<modelmapper.version>1.1.2</modelmapper.version>
		<olap4j.version>1.2.0</olap4j.version><!-- Overrides olap4j:0.9.7.309-JS-3 
			in jasperreports -->
		<primefaces.version>6.0</primefaces.version>
		<primefaces-themes-bootstrap.version>1.0.10</primefaces-themes-bootstrap.version>
		<spring.cloud.version>Finchley.SR1</spring.cloud.version>
		<spring.cloud.dashboard.version>1.1.0.RELEASE</spring.cloud.dashboard.version>
		<spring.integration.version>4.3.17.RELEASE</spring.integration.version>
		<spring-security-rsa.version>1.0.3.RELEASE</spring-security-rsa.version>
		<zipkin.server.version>2.11.7</zipkin.server.version>
		<zipkin.autoconfigure.ui.version>2.11.7</zipkin.autoconfigure.ui.version>

		<spring.swagger.version>2.8.0</spring.swagger.version>
		<activeMQ.version>5.5.1</activeMQ.version>
		<commons.codec.version>1.11</commons.codec.version>
		
		<spring.azure.starter.storage.version>1.0.0.M2</spring.azure.starter.storage.version>
		<azure.key.vault.spring.boot.version>2.1.6</azure.key.vault.spring.boot.version>
		<azure.spring.boot.version>2.0.4</azure.spring.boot.version>
		<azure.spring.boot.servicebus.version>2.1.6</azure.spring.boot.servicebus.version>
		<azure.active.directory.spring.boot.version>2.1.6</azure.active.directory.spring.boot.version>
		<spring.cloud.aws.context.version>2.0.0.RELEASE</spring.cloud.aws.context.version>
		<spring.cloud.aws.messaging.version>2.0.0.RELEASE</spring.cloud.aws.messaging.version>
		<thymeleaf.spring5.version>3.0.11.RELEASE</thymeleaf.spring5.version>
		<!-- == Other libraries versions (test) == -->
		<dumbster.version>1.9.0.2</dumbster.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- == Begin Terasoluna Server Framework for Java == -->
			<dependency>
				<groupId>org.terasoluna.gfw</groupId>
				<artifactId>terasoluna-gfw-parent</artifactId>
				<type>pom</type>
				<version>${terasoluna.version}</version>
				<scope>import</scope>
			</dependency>
			<!-- == End Terasoluna Server Framework for Java == -->

			<!-- == Begin Java standard extensions == -->
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${javax-javaee.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>${javax-annotation.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jsr173_api</artifactId>
				<version>${javax-jsr173.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.jws</groupId>
				<artifactId>jsr181-api</artifactId>
				<version>${javax-jsr181.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.jms</groupId>
				<artifactId>javax.jms-api</artifactId>
				<version>${javax-jms.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>${javax-el.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.web</groupId>
				<artifactId>javax.el</artifactId>
				<version>${javax-el.version}</version>
			</dependency>
			<!-- == End Java standard extensions == -->

			<!-- == Begin Other libraries == -->

			<!-- Activiti BPM Platform -->
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-engine</artifactId>
				<version>${activiti.version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-spring</artifactId>
				<version>${activiti.version}</version>
			</dependency>

			<!-- Apache CXF -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-bindings-soap</artifactId>
				<version>${apache-cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-core</artifactId>
				<version>${apache-cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${apache-cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${apache-cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-security</artifactId>
				<version>${apache-cxf.version}</version>
			</dependency>

			<!-- Apache Commons -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-dbutils</groupId>
				<artifactId>commons-dbutils</artifactId>
				<version>${commons-dbutils.version}</version>
			</dependency>

			<!-- Drools -->
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-bom</artifactId>
				<type>pom</type>
				<version>${drools.version}</version>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.aether</groupId>
				<artifactId>aether-api</artifactId>
				<version>${aether.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.aether</groupId>
				<artifactId>aether-connector-basic</artifactId>
				<version>${aether.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.aether</groupId>
				<artifactId>aether-impl</artifactId>
				<version>${aether.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.aether</groupId>
				<artifactId>aether-transport-file</artifactId>
				<version>${aether.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.eclipse.aether</groupId>
				<artifactId>aether-transport-http</artifactId>
				<version>${aether.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-aether-provider</artifactId>
				<version>${maven.aether.provider.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- JasperReports -->
			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports-fonts</artifactId>
				<version>${jasperreports-fonts.version}</version>
			</dependency>
			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>itextpdf</artifactId>
				<version>${itextpdf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.olap4j</groupId>
				<artifactId>olap4j</artifactId>
				<version>${olap4j.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports</artifactId>
				<version>${jasperreports.version}</version>
			</dependency>
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${itext.version}</version>
			</dependency>			

			<!-- Hibernate -->
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>${hibernate-jpa-2.1-api.version}</version>
			</dependency>

			<!-- JAX-WS -->
			<dependency>
				<groupId>javax.xml.ws</groupId>
				<artifactId>jaxws-api</artifactId>
				<version>${jaxws-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.ws</groupId>
				<artifactId>jaxws-rt</artifactId>
				<version>${jaxws-rt.version}</version>
			</dependency>

			<!-- PrimeFaces -->
			<dependency>
				<groupId>org.primefaces</groupId>
				<artifactId>primefaces</artifactId>
				<version>${primefaces.version}</version>
			</dependency>
			<dependency>
				<groupId>org.primefaces.themes</groupId>
				<artifactId>bootstrap</artifactId>
				<version>${primefaces-themes-bootstrap.version}</version>
			</dependency>

			<!-- Spring Security RSA -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-rsa</artifactId>
				<version>${spring-security-rsa.version}</version>
			</dependency>
			<!-- == End Other libraries == -->

			<!-- == Begin Other libraries (test) == -->
			<dependency>
				<groupId>com.bitmechanic</groupId>
				<artifactId>dumbster</artifactId>
				<version>${dumbster.version}</version>
			</dependency>
			<!-- == End Other libraries (test)== -->

			<!-- Begin Spring Cloud libraries -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.github.vanroy</groupId>
				<artifactId>spring-cloud-dashboard</artifactId>
				<version>${spring.cloud.dashboard.version}</version>
			</dependency>
			<!-- End Spring Cloud libraries -->

			<!-- Begin Model Mapper libraries -->
			<dependency>
				<groupId>org.modelmapper</groupId>
				<artifactId>modelmapper</artifactId>
				<version>${modelmapper.version}</version>
			</dependency>
			<!-- End Model Mapper libraries -->
			
			<!-- Begin zipkin libraries -->
			<dependency>
				<groupId>io.zipkin.java</groupId>
				<artifactId>zipkin-server</artifactId>
				<version>${zipkin.server.version}</version>
			</dependency>
			<dependency>
				<groupId>io.zipkin.java</groupId>
				<artifactId>zipkin-autoconfigure-ui</artifactId>
				<version>${zipkin.autoconfigure.ui.version}</version>
			</dependency>
			<!-- End zipkin libraries -->

			<!-- Begin Spring Integration libraries -->
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-bom</artifactId>
				<version>${spring.integration.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- End Spring Integration libraries -->

			<!-- Begin Swagger -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${spring.swagger.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${spring.swagger.version}</version>
				<scope>compile</scope>
			</dependency>
			<!-- End Swagger -->

			<!-- Begin Message Broker libraries -->
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${activeMQ.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons.codec.version}</version>
			</dependency>
			<!-- Begin Message Broker libraries -->

			<!-- Begin Spring Cloud Stream libraries -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
				<version>2.0.1.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-stream-binder-kafka</artifactId>
				<version>2.0.1.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-kafka</artifactId>
				<version>3.0.0.RELEASE</version>
			</dependency>
			<!-- End Spring Cloud Stream libraries -->
			<!-- Begin Azure libraries -->
			<dependency>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-documentdb-spring-boot-starter</artifactId>
				<version>${azure.spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-servicebus-spring-boot-starter</artifactId>
				<version>${azure.spring.boot.servicebus.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-active-directory-spring-boot-starter</artifactId>
				<version>${azure.active.directory.spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-keyvault-secrets-spring-boot-starter</artifactId>
				<version>${azure.key.vault.spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>spring-azure-starter-storage</artifactId>
				<version>${spring.azure.starter.storage.version}</version>
			</dependency>
			<!-- End Azure libraries -->
			<!-- Begin AWS libraries -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-aws-context</artifactId>
				<version>${spring.cloud.aws.context.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-aws-messaging</artifactId>
				<version>${spring.cloud.aws.messaging.version}</version>
			</dependency>
			<!-- End AWS libraries -->
			<!-- Begin Thymeleaf libraries -->
			<dependency>
				<groupId>org.thymeleaf</groupId>
				<artifactId>thymeleaf-spring5</artifactId>
				<version>${thymeleaf.spring5.version}</version>
			</dependency>
			<!-- End Thymeleaf libraries -->
		</dependencies>
	</dependencyManagement>
	
	<profiles>
		<!-- Enable sign filest -->
		<profile>
			<id>with-sign</id>
			<activation>
				<!-- Disabled by default: should be triggered manually -->
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
							<executions>
						      <execution>
						          	<id>sign-artifacts</id>
						          	<phase>verify</phase>
						          	<goals>
						            	<goal>sign</goal>
						          	</goals>
						        </execution>
							</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>		

</project>
